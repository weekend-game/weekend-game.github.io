<!-- Info -->

<table>
	<tr>
		<td class="text">
			<p>
				<b>Weekend Game Language</b>, <a class="link" target="_blank"
					href="https://github.com/weekend-game/weekendinterpreter/">WeekendInterpreter</a>
			</p>
			<p>
				Since I've created <a class="link" target="_blank"
					href="https://weekend-game.github.io/weekendinterpreter.htm">a
					programming language</a>, why not write something interesting in it and
				experience what it's like to write in such a language? I'll take a
				break from algorithms and interpreter writing techniques and write a
				program in the language I created.
			</p>
			<p>It's a small text-based game. A knight walks through an aspen
				forest. He meets different situations and must decide how to act
				in each one. The game has no music or graphics. The current language
				implementation simply doesn't allow for such features. However,
				nothing prevents them from being added. If WeekendInterpreter is
				Hello World for interpreter developers, then AspenForest is Hello
				World for text-based games, plus an attempt at using a new (actually
				very old) language.</p>
			<p>
				The program is here: <a class="link" target="_blank"
					href="https://github.com/weekend-game/aspenforest/">https://github.com/weekend-game/aspenforest/</a>
				(EN) and here: <a class="link" target="_blank"
					href="https://gitflic.ru/project/weekend-game/aspenforest/">https://gitflic.ru/project/weekend-game/aspenforest/</a>
				(RU).
			</p>
		</td>
	</tr>
	<tr>
		<td class="title2">How to run the program</td>
	</tr>
	<tr>
		<td class="text">
			<p>Download the repository to your computer. First, you need to
				run the language interpreter. To do this, double-click the
				WeekendInterpreter.jar file or, if it doesn't start, double-click
				the WeekendInterpreter.bat file. If the latter doesn't start the
				application, download and install Java 11 or later and try the
				methods described above again.</p>
			<p>After running the interpreter, open the AspenForest.wgl file
				and press F5 to run the game.</p>
		</td>
	<tr>
		<td id="HowToUse" class="title2">How to play</td>
	</tr>
	<tr>
		<td class="text">
			<p>The output panel (the lower half of the application window)
				will describe the current situation and offer options for further
				action. Enter the numbers corresponding to your choice.</p>
			<p>I must apologize for having to enter answers in a pop-up
				window that appears in an inconvenient location. But this
				implementation of the INPUT command was the simplest.</p>
		</td>
	</tr>
	<tr>
		<td class="title2">Results</td>
	</tr>
	<tr>
		<td class="text">
			<p>It's funny! Using this language to write even a very simple
				program, you begin to appreciate what OOP and even structured
				programming give programmers. I found it interesting to briefly step
				back in time. It was as if I wasn't writing a program, but
				participating in a time machine test.</p>
		</td>
	</tr>
</table>

<!-- End of Info -->
